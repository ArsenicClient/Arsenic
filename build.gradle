buildscript {
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()

        maven {
            url 'https://jitpack.io'
        }

        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }

        maven {
            url = "https://plugins.gradle.org/m2"
        }

        maven {
            name = 'SpongePowered'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.0.10"
        classpath "org.spongepowered:mixingradle:0.6-SNAPSHOT"
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.3"
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "org.spongepowered.mixin"
apply plugin: "com.github.johnrengelman.shadow"

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }

    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
}

version = "v0.1"
group="arsenic"
archivesBaseName = "Arsenic"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = 'UTF-8'

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_20"
    clientJvmArgs += '-Dfml.coreMods.load=arsenic.injection.MixinLoader'
}

configurations {
    // Adds a reference so that we extend/add on to it with depends so we can grab them and compile them into the jar.
    embed
    // Grabs what's extended/added on from/to embed and compiles it into the jar when being built.
    compile.extendsFrom embed
    lwjgl
    lwjglNative {
        transitive = false
    }
}

dependencies {
    embed('org.spongepowered:mixin:0.6.12-SNAPSHOT') {
        exclude module: 'launchwrapper'
    }

    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    testCompileOnly 'org.projectlombok:lombok:1.18.26'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'

    implementation("com.github.Sol-Client:LWJGL-Patched:bf1d105853")
    implementation ("org.lwjgl:lwjgl:3.3.0:natives-windows") {
        transitive = false
    }
    implementation ("org.lwjgl:lwjgl-tinyfd:3.3.0:natives-windows") {
        transitive = false
    }
    implementation ("org.lwjgl:lwjgl-nanovg:3.3.0:natives-windows") {
        transitive = false
    }

    implementation 'org.jetbrains:annotations:23.0.0'

}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

mixin {
    add sourceSets.main, "mixins.arsenic.refmap.json"
}

shadowJar {
    dependencies {
        include(dependency('org.spongepowered:mixin'))
        include(dependency('org.jetbrains:annotations'))
    }

    classifier = 'full'
}

jar {
    from(configurations.embed.collect {
        it.isDirectory() ? it : zipTree(it)
    }) {
        // Excludes/Removes useless bloat files from the compiled jar.
        exclude 'dummyThing',
                'LICENSE.txt',
                'META-INF/MUMFREY.RSA',
                'META-INF/maven/**',
                'org/**/*.html'
    }
    manifest.attributes(
            "MixinConfigs": 'mixins.arsenic.json',
            "tweakClass": 'org.spongepowered.asm.launch.MixinTweaker',
            "TweakOrder": 0,
            "FMLCorePluginContainsFMLMod": true,
            "ForceLoadAsMod": true,
            "ModSide": "CLIENT",
            "FMLCorePlugin": "arsenic.injection.MixinLoader"
    )
}

configurations {
    mods
    shade
    compile.extendsFrom shade
}

apply plugin: "idea"

idea {
    module {
        inheritOutputDirs = true
    }
}
